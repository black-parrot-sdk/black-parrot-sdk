gnu_dir       :=$(BP_SDK_DIR)/riscv-gnu-toolchain
gnudramfs_dir :=$(gnu_dir)
gnulinux_dir  :=$(gnu_dir)
qemu_dir      :=$(gnu_dir)/qemu
dromajo_dir   :=$(BP_SDK_DIR)/dromajo
bedrock_dir   :=$(BP_SDK_DIR)/bedrock

define submodule_tool_template
$(1)_tag ?= $(addprefix $(1)., $(shell cd $(2); $(GIT) rev-parse HEAD))
$(BP_SDK_TOOLS_TOUCH_DIR)/$$($(1)_tag):
	rm -rf $(BP_SDK_TOOLS_TOUCH_DIR)/$(1).*
	+$(MAKE) $(1)_build
	touch $(BP_SDK_TOOLS_TOUCH_DIR)/$$($(1)_tag)
$(1): | $(BP_SDK_TOOLS_TOUCH_DIR)/$$($(1)_tag)
$(1)_manual:
	+$(MAKE) $(1)_build
endef

# gnu target builds the entire toolchain
gnu: gnulinux
gnulinux: gnudramfs

gnulinux_build:
	cd $(gnu_dir); \
		./configure --prefix=$(BP_SDK_INSTALL_DIR) --with-arch=rv64gcb --with-abi=lp64d --with-cmodel=medany --with-tune=bsg_blackparrot --with-isa-spec=2.2 \
			--enable-linux --disable-gdb --enable-qemu-system \
			--with-target-cflags="-mstrict-align -mcmodel=medany" \
			--with-target-cxxflags="-mstrict-align -mcmodel=medany"
	$(MAKE) -C $(gnu_dir) linux
	$(MAKE) -C $(gnu_dir) install

gnudramfs_build:
	cd $(gnu_dir); \
		./configure --prefix=$(BP_SDK_INSTALL_DIR) --with-multilib-generator="rv64g-lp64d--;rv64gcb-lp64d--" --with-cmodel=medany --with-tune=bsg_blackparrot --with-isa-spec=2.2 \
			--disable-linux --disable-gdb --disable-qemu-system \
			--with-target-cflags="-mstrict-align -mcmodel=medany" \
			--with-target-cxxflags="-mstrict-align -mcmodel=medany"
	$(MAKE) -C $(gnu_dir)
	$(MAKE) -C $(gnu_dir) install
	cp $(BP_SDK_INSTALL_DIR)/riscv64-unknown-elf-dramfs/bin/dramfs_mklfs $(BP_SDK_BIN_DIR)

# Experimental, only supported on Centos 7 as written
qemu_build:
	mkdir -p $(qemu_dir)/build
	cd $(qemu_dir)/build; \
		../configure --prefix=$(BP_SDK_INSTALL_DIR) \
		--enable-pie --disable-seccomp \
		--target-list=riscv64-softmmu \
		--python=$(shell which $(PYTHON))
	cd $(qemu_dir)/build; $(MAKE)
	cd $(qemu_dir)/build; $(MAKE) install

dromajo_build:
	mkdir -p $(dromajo_dir)/build
	$(CMAKE) -S $(dromajo_dir) -B $(dromajo_dir)/build -DCMAKE_BUILD_TYPE=Release
	$(MAKE) -C $(dromajo_dir)/build
	cp $(dromajo_dir)/build/dromajo $(BP_SDK_BIN_DIR)
	cp $(dromajo_dir)/build/libdromajo_cosim.a $(BP_SDK_LIB_DIR)
	cp $(dromajo_dir)/include/dromajo_cosim.h $(BP_SDK_INCLUDE_DIR)

bedrock_build:
	mkdir -p $(BP_SDK_UCODE_DIR)
	$(MAKE) -C $(bedrock_dir) bins
	cp $(bedrock_dir)/roms/*.bin $(BP_SDK_UCODE_DIR)/
	cp $(bedrock_dir)/roms/*.addr $(BP_SDK_UCODE_DIR)/
	cp $(bedrock_dir)/roms/*.mem $(BP_SDK_UCODE_DIR)/

.PHONY: gnu dromajo bedrock panic_room riscv-isa-sim
$(eval $(call submodule_tool_template,gnudramfs,$(gnudramfs_dir)))
$(eval $(call submodule_tool_template,gnulinux,$(gnulinux_dir)))
$(eval $(call submodule_tool_template,dromajo,$(dromajo_dir)))
$(eval $(call submodule_tool_template,bedrock,$(bedrock_dir)))
$(eval $(call submodule_tool_template,qemu,$(gnu_dir)))

.PHONY: tools_clean
tools_clean:
	rm -rf $(BP_SDK_TOOLS_TOUCH_DIR)/*
	-$(MAKE) -C $(riscv-isa-sim) clean
	-$(MAKE) -C $(bedrock_dir) clean
	-$(MAKE) -C $(dromajo_dir)/build clean
	-$(MAKE) -C $(gnu_dir) clean
