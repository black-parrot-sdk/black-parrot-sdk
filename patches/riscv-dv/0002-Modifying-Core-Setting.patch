diff --git a/target/rv64gc/riscv_core_setting.sv b/target/rv64gc/riscv_core_setting.sv
index 376b90f..acf8aa8 100644
--- a/target/rv64gc/riscv_core_setting.sv
+++ b/target/rv64gc/riscv_core_setting.sv
@@ -31,9 +31,12 @@ riscv_instr_name_t unsupported_instr[];
 
 // ISA supported by the processor
 riscv_instr_group_t supported_isa[$] = {RV32I, RV32M, RV64I, RV64M, RV32C, RV64C, RV32A, RV64A,
-                                        RV32F, RV64F, RV32D, RV64D, RV32X};
+                                        RV32F, RV64F, RV32D, RV64D};
+//                                        RV32F, RV64F, RV32D, RV64D, RV32X};
+
 // Interrupt mode support
-mtvec_mode_t supported_interrupt_mode[$] = {DIRECT, VECTORED};
+//mtvec_mode_t supported_interrupt_mode[$] = {DIRECT, VECTORED};
+mtvec_mode_t supported_interrupt_mode[$] = {DIRECT};
 
 // The number of interrupt vectors to be generated, only used if VECTORED interrupt mode is
 // supported
@@ -46,7 +49,7 @@ bit support_pmp = 0;
 bit support_epmp = 0;
 
 // Debug mode support
-bit support_debug_mode = 0;
+bit support_debug_mode = 1;
 
 // Support delegate trap to user mode
 bit support_umode_trap = 0;
@@ -55,7 +58,7 @@ bit support_umode_trap = 0;
 bit support_sfence = 1;
 
 // Support unaligned load/store
-bit support_unaligned_load_store = 1'b1;
+bit support_unaligned_load_store = 1'b0;
 
 // GPR setting
 parameter int NUM_FLOAT_GPR = 32;
