From 1eea537c82cd6689b1bb94499d75a5171c967d66 Mon Sep 17 00:00:00 2001
From: Dan Ruelas-Petrisko <petrisko@cs.washington.edu>
Date: Sun, 13 Jul 2025 14:20:14 -0700
Subject: [PATCH] Fixing output format

---
 run.py | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/run.py b/run.py
index 8703cb6..08d633c 100644
--- a/run.py
+++ b/run.py
@@ -422,21 +422,21 @@ def gcc_compile(test_list, output_dir, isa, mabi, opts, debug_cmd):
       mabi       : MABI variant passed to GCC
       debug_cmd  : Produce the debug cmd log without running
     """
     cwd = os.path.dirname(os.path.realpath(__file__))
     for test in test_list:
         for i in range(0, test['iterations']):
             if 'no_gcc' in test and test['no_gcc'] == 1:
                 continue
             prefix = ("{}/asm_test/{}_{}".format(output_dir, test['test'], i))
             asm = prefix + ".S"
-            elf = prefix + ".o"
+            elf = prefix + ".riscv"
             binary = prefix + ".bin"
             test_isa = isa
             if not os.path.isfile(asm) and not debug_cmd:
                 logging.error("Cannot find assembly test: {}\n".format(asm))
                 sys.exit(RET_FAIL)
             # gcc compilation
             cmd = ("{} -static -mcmodel=medany \
              -fvisibility=hidden -nostdlib \
              -nostartfiles {} \
              -I{}/user_extension \
@@ -456,24 +456,24 @@ def gcc_compile(test_list, output_dir, isa, mabi, opts, debug_cmd):
                     test_isa = re.sub(r"(rv.+?)c", r"\1", test_isa)
             # If march/mabi is not defined in the test gcc_opts, use the default
             # setting from the command line.
             if not re.search('march', cmd):
                 cmd += (" -march={}".format(test_isa))
             if not re.search('mabi', cmd):
                 cmd += (" -mabi={}".format(mabi))
             logging.info("Compiling {}".format(asm))
             run_cmd_output(cmd.split(), debug_cmd=debug_cmd)
             # Convert the ELF to plain binary, used in RTL sim
-            logging.info("Converting to {}".format(binary))
-            cmd = ("{} -O binary {} {}".format(
-                get_env_var("RISCV_OBJCOPY", debug_cmd=debug_cmd), elf, binary))
-            run_cmd_output(cmd.split(), debug_cmd=debug_cmd)
+            #logging.info("Converting to {}".format(binary))
+            #cmd = ("{} -O binary {} {}".format(
+            #    get_env_var("RISCV_OBJCOPY", debug_cmd=debug_cmd), elf, binary))
+            #run_cmd_output(cmd.split(), debug_cmd=debug_cmd)
 
 
 def run_assembly(asm_test, iss_yaml, isa, mabi, gcc_opts, iss_opts, output_dir,
                  setting_dir, debug_cmd):
     """Run a directed assembly test with ISS
 
     Args:
       asm_test    : Assembly test file
       iss_yaml    : ISS configuration file in YAML format
       isa         : ISA variant passed to the ISS
-- 
2.18.4

