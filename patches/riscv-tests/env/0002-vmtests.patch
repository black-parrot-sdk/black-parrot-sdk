From: Dan Petrisko <petrisko@cs.washington.edu>
---
diff --git a/v/vm.c b/v/vm.c
index 178d90b..9a70910 100644
--- a/v/vm.c
+++ b/v/vm.c
@@ -5,6 +5,7 @@
 #include <stdio.h>
 
 #include "riscv_test.h"
+#include "bp_utils.h"
 
 #if __riscv_xlen == 32
 # define SATP_MODE_CHOICE SATP_MODE_SV32
@@ -40,7 +41,8 @@ static uint64_t lfsr63(uint64_t x)
 
 static void cputchar(int x)
 {
-  do_tohost(0x0101000000000000 | (unsigned char)x);
+  //do_tohost(0x0101000000000000 | (unsigned char)x);
+  bp_cprint((char)x);
 }
 
 static void cputstring(const char* s)
@@ -51,7 +53,8 @@ static void cputstring(const char* s)
 
 static void terminate(int code)
 {
-  do_tohost(code);
+  //do_tohost(code);
+  bp_finish(code);
   while (1);
 }
 
@@ -199,7 +202,8 @@ void handle_trap(trapframe_t* tf)
     for (long i = 1; i < MAX_TEST_PAGES; i++)
       evict(i*PGSIZE);
 
-    terminate(n);
+    asm volatile ("ecall");
+    //terminate(n);
   }
   else if (tf->cause == CAUSE_ILLEGAL_INSTRUCTION)
   {
