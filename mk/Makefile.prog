
$(eval $(call bsg_tgt_build_submodule,bedrock,$(BP_BEDROCK_DIR),$(BP_RISCV_TOUCH_DIR),$(BP_PATCH_DIR),$(BP_WORK_DIR)))
%/.bedrock_build:
	@+$(MAKE) -C $< dirs
	@+$(MAKE) -C $< as
	@+$(MAKE) -C $< bins
	@$(eval SUITE_DIR=$(subst .,,$(subst _build,,$(@F))))
	@$(eval PROG_DIR=$(BP_RISCV_DIR)/$(SUITE_DIR))
	@$(MKDIR) -p $(PROG_DIR)
	@$(CP) $</roms/*.bin $</roms/*.addr $</roms/*.mem $(PROG_DIR)

$(eval $(call bsg_tgt_build_submodule,bootrom,$(BP_BOOTROM_DIR),$(BP_RISCV_TOUCH_DIR),$(BP_PATCH_DIR),$(BP_WORK_DIR)))
%/.bootrom_build: | build.bedrock
	@$(eval export CROSS_COMPILE=riscv64-unknown-elf-)
	@$(eval export WITH_MARCH=$(PLATFORM_MARCH))
	@$(eval export WITH_MABI=$(PLATFORM_MABI))
	@$(eval export BP_SDK_UCODE_DIR=$(BP_RISCV_DIR)/bedrock)
	@+$(MAKE) -C $< clean all
	@$(eval SUITE_DIR=$(subst .,,$(subst _build,,$(@F))))
	@$(eval PROG_DIR=$(BP_RISCV_DIR)/$(SUITE_DIR))
	@$(MKDIR) -p $(PROG_DIR)
	@$(FIND) $< -name "*.riscv" -exec $(CP) {} $(PROG_DIR) \;

$(eval $(call bsg_tgt_build_submodule,lwip,$(BP_LWIP_DIR),$(BP_RISCV_TOUCH_DIR),$(BP_PATCH_DIR),$(BP_WORK_DIR)))
%/.lwip_build:
	@$(eval export CROSS_COMPILE=riscv64-unknown-elf-)
	@$(eval export CC=$(CROSS_COMPILE)gcc)
	@$(eval export AR=$(CROSS_COMPILE)ar)
	@$(eval export RANLIB=$(CROSS_COMPILE)ranlib)
	@+$(MAKE) BP_RISCV_DIR=$(BP_RISCV_DIR) -C $< install

$(eval $(call bsg_tgt_build_submodule,wolfssllib,$(BP_WOLFSSL_DIR),$(BP_RISCV_TOUCH_DIR),$(BP_PATCH_DIR),$(BP_WORK_DIR)))
%/.wolfssllib_build:
	@$(eval export CROSS_COMPILE=riscv64-unknown-elf-)
	@+$(MAKE) BP_RISCV_DIR=$(BP_RISCV_DIR) -C $< -f bp_makefile all

$(eval $(call bsg_tgt_build_submodule,bp-demos,$(BP_DEMOS_DIR),$(BP_RISCV_TOUCH_DIR),$(BP_PATCH_DIR),$(BP_WORK_DIR)))
%/.bp-demos_build:
	@$(eval export CROSS_COMPILE=$(PLATFORM_TRIPLE)-)
	@$(eval export WITH_MARCH=$(PLATFORM_MARCH))
	@$(eval export WITH_MABI=$(PLATFORM_MABI))
	@+$(MAKE) -C $< clean all
	@$(eval SUITE_DIR=$(subst .,,$(subst _build,,$(@F))))
	@$(eval PROG_DIR=$(BP_RISCV_DIR)/$(SUITE_DIR))
	$(MKDIR) -p $(PROG_DIR)
	$(FIND) $< -name "*.riscv" -exec $(CP) {} $(PROG_DIR) \;

$(eval $(call bsg_tgt_build_submodule,bp-tests,$(BP_TESTS_DIR),$(BP_RISCV_TOUCH_DIR),$(BP_PATCH_DIR),$(BP_WORK_DIR)))
%/.bp-tests_build:
	@$(eval SUITE_DIR=$(subst .,,$(subst _build,,$(@F))))
	@$(eval PROG_DIR=$(BP_RISCV_DIR)/$(SUITE_DIR))
	@$(eval export CROSS_COMPILE=$(PLATFORM_TRIPLE)-)
	@$(eval export WITH_MARCH=$(PLATFORM_MARCH))
	@$(eval export WITH_MABI=$(PLATFORM_MABI))
	@+$(MAKE) -C $< clean all
	@$(eval SUITE_DIR=$(subst .,,$(subst _build,,$(@F))))
	@$(eval PROG_DIR=$(BP_RISCV_DIR)/$(SUITE_DIR))
	@$(MKDIR) -p $(PROG_DIR)
	@$(FIND) $< -name "*.riscv" -exec $(CP) {} $(PROG_DIR) \;

$(eval $(call bsg_tgt_build_submodule,riscv-tests,$(BP_RISCV_TESTS_DIR),$(BP_RISCV_TOUCH_DIR),$(BP_PATCH_DIR),$(BP_WORK_DIR)))
%/.riscv-tests_build:
	@$(eval SUITE_DIR=$(subst .,,$(subst _build,,$(@F))))
	@$(eval PROG_DIR=$(BP_RISCV_DIR)/$(SUITE_DIR))
	@$(eval export RISCV_PREFIX=$(PLATFORM_TRIPLE)-)
	@$(CD) $(@D); $</configure --target=$(RISCV_TARGET)
	@+$(MAKE) -C $(@D) isa
	@+$(MAKE) -C $(@D) benchmarks
	@$(eval SUITE_DIR=$(subst .,,$(subst _build,,$(@F))))
	@$(eval PROG_DIR=$(BP_RISCV_DIR)/$(SUITE_DIR))
	@$(MKDIR) -p $(PROG_DIR)
	@$(FIND) $(@D) -name "*.riscv" -exec $(CP) {} $(PROG_DIR) \;

# This is a VPATH hack inspired by
# https://patchwork.ozlabs.org/project/buildroot/patch/1539902241-10211-1-git-send-email-sergio.prado@e-labworks.com/
$(eval $(call bsg_tgt_build_submodule,beebs,$(BP_BEEBS_DIR),$(BP_RISCV_TOUCH_DIR),$(BP_PATCH_DIR),$(BP_WORK_DIR)))
%/.beebs_build:
	@$(eval SUITE_DIR=$(subst .,,$(subst _build,,$(@F))))
	@$(eval PROG_DIR=$(BP_RISCV_DIR)/$(SUITE_DIR))
	@$(CD) $<; ./configure \
		--host=riscv64 \
		--with-board=none \
		--with-chip=generic \
		--with-gnu-ld \
		--with-pic
	@+$(MAKE) -C $< all VPATH=$(BP_INSTALL_DIR)/$(PLATFORM_TRIPLE)/lib/
	@$(FIND) $</src -type f -executable -exec $(MV) {} {}.riscv \;
	@$(eval SUITE_DIR=$(subst .,,$(subst _build,,$(@F))))
	@$(eval PROG_DIR=$(BP_RISCV_DIR)/$(SUITE_DIR))
	@$(MKDIR) -p $(PROG_DIR)
	@$(FIND) $</src -name "*.riscv" -exec $(MV) {} $(PROG_DIR) \;

$(eval $(call bsg_tgt_build_submodule,coremark,$(BP_COREMARK_DIR),$(BP_RISCV_TOUCH_DIR),$(BP_PATCH_DIR),$(BP_WORK_DIR)))
%/.coremark_build:
	@$(eval SUITE_DIR=$(subst .,,$(subst _build,,$(@F))))
	@$(eval PROG_DIR=$(BP_RISCV_DIR)/$(SUITE_DIR))
	@$(eval export PORT_CC=$(PLATFORM_TRIPLE)-gcc)
	@$(eval export PORT_LD_FLAGS=)
	@$(eval export PORT_CFLAGS=)
	@+$(MAKE) -C $</barebones -fcore_portme.mak clean coremark.riscv
	@$(eval SUITE_DIR=$(subst .,,$(subst _build,,$(@F))))
	@$(eval PROG_DIR=$(BP_RISCV_DIR)/$(SUITE_DIR))
	@$(MKDIR) -p $(PROG_DIR)
	@$(FIND) $</barebones -name "*.riscv" -exec $(CP) {} $(PROG_DIR) \;

$(eval $(call bsg_tgt_build_submodule,spec2000,$(BP_SPEC2000_DIR),$(BP_RISCV_TOUCH_DIR),$(BP_PATCH_DIR),$(BP_WORK_DIR)))
%/.spec2000_build:
	@$(eval SUITE_DIR=$(subst .,,$(subst _build,,$(@F))))
	@$(eval PROG_DIR=$(BP_RISCV_DIR)/$(SUITE_DIR))
	@$(eval export CROSS_COMPILE=$(PLATFORM_TRIPLE)-)
	@+$(MAKE) -C $<
	@$(eval SUITE_DIR=$(subst .,,$(subst _build,,$(@F))))
	@$(eval PROG_DIR=$(BP_RISCV_DIR)/$(SUITE_DIR))
	@$(MKDIR) -p $(PROG_DIR)
	@$(FIND) $< -name "*.riscv" -exec $(CP) {} $(PROG_DIR) \;

$(eval $(call bsg_tgt_build_submodule,spec2006,$(BP_SPEC2006_DIR),$(BP_RISCV_TOUCH_DIR),$(BP_PATCH_DIR),$(BP_WORK_DIR)))
%/.spec2006_build:
	@$(eval SUITE_DIR=$(subst .,,$(subst _build,,$(@F))))
	@$(eval PROG_DIR=$(BP_RISCV_DIR)/$(SUITE_DIR))
	@$(eval export CROSS_COMPILE=$(PLATFORM_TRIPLE)-)
	@+$(MAKE) -C $<
	@$(eval SUITE_DIR=$(subst .,,$(subst _build,,$(@F))))
	@$(eval PROG_DIR=$(BP_RISCV_DIR)/$(SUITE_DIR))
	@$(MKDIR) -p $(PROG_DIR)
	@$(FIND) $< -name "*.riscv" -exec $(CP) {} $(PROG_DIR) \;

$(eval $(call bsg_tgt_build_submodule,spec2017,$(BP_SPEC2017_DIR),$(BP_RISCV_TOUCH_DIR),$(BP_PATCH_DIR),$(BP_WORK_DIR)))
%/.spec2017_build:
	@$(eval SUITE_DIR=$(subst .,,$(subst _build,,$(@F))))
	@$(eval PROG_DIR=$(BP_RISCV_DIR)/$(SUITE_DIR))
	@$(eval export CROSS_COMPILE=$(PLATFORM_TRIPLE)-)
	@+$(MAKE) -C $<
	@$(eval SUITE_DIR=$(subst .,,$(subst _build,,$(@F))))
	@$(eval PROG_DIR=$(BP_RISCV_DIR)/$(SUITE_DIR))
	@$(MKDIR) -p $(PROG_DIR)
	@$(FIND) $< -name "*.riscv" -exec $(CP) {} $(PROG_DIR) \;

$(eval $(call bsg_tgt_build_submodule,riscv-arch,$(BP_RISCV_ARCH_DIR),$(BP_RISCV_TOUCH_DIR),$(BP_PATCH_DIR),$(BP_WORK_DIR)))
%/.riscv-arch_build:
	@$(eval SUITE_DIR=$(subst .,,$(subst _build,,$(@F))))
	@$(eval PROG_DIR=$(BP_RISCV_DIR)/$(SUITE_DIR))
	@$(eval export LC_ALL=en_US.utf-8)
	@$(eval export LANG=en_US.utf-8)
	@+$(MAKE) -C $< all
	@$(eval SUITE_DIR=$(subst .,,$(subst _build,,$(@F))))
	@$(eval PROG_DIR=$(BP_RISCV_DIR)/$(SUITE_DIR))
	@$(MKDIR) -p $(PROG_DIR)
	@$(FIND) $</work/riscof -name "*-01.riscv" -exec $(CP) {} $(PROG_DIR) \;
	@$(FIND) $</work/riscof -name "*-01.signature" -exec $(CP) {} $(PROG_DIR) \;

$(eval $(call bsg_tgt_build_submodule,riscv-dv,$(BP_RISCV_DV_DIR),$(BP_RISCV_TOUCH_DIR),$(BP_PATCH_DIR),$(BP_WORK_DIR)))
%/.riscv-dv_build:
	@$(eval SUITE_DIR=$(subst .,,$(subst _build,,$(@F))))
	@$(eval PROG_DIR=$(BP_RISCV_DIR)/$(SUITE_DIR))
	@$(eval export PYTHON=$(PYTHON))
	@$(eval export RISCV_GCC=$(PLATFORM_TRIPLE)-gcc)
	@$(eval export RISCV_OBJCOPY=$(PLATFORM_TRIPLE)-objcopy)
	@$(eval export RISCV_GCC_OPTS=-march=rv64imafdc -mabi=lp64d -specs=dramfs.specs -specs=perch.specs)
	@+$(MAKE) -C $<
	@$(eval SUITE_DIR=$(subst .,,$(subst _build,,$(@F))))
	@$(eval PROG_DIR=$(BP_RISCV_DIR)/$(SUITE_DIR))
	@$(MKDIR) -p $(PROG_DIR)
	@$(FIND) $< -name "*.riscv" -exec $(CP) {} $(PROG_DIR) \;

## Default Linux build is single core and terminates immediately
$(eval $(call bsg_tgt_build_submodule,linux,$(BP_LINUX_DIR),$(BP_RISCV_TOUCH_DIR),$(BP_PATCH_DIR),$(BP_WORK_DIR)))
%/.linux_build:
	@$(eval SUITE_DIR=$(subst .,,$(subst _build,,$(@F))))
	@$(eval PROG_DIR=$(BP_RISCV_DIR)/$(SUITE_DIR))
	@$(eval export WITH_SHELL ?= $(BP_LINUX_DIR)/scripts/test_shutdown.sh)
	@$(eval export MEM_SIZE ?= 64)
	@+$(MAKE) -C $< OPENSBI_NCPUS=1 clean_opensbi linux-1.riscv
	@+$(MAKE) -C $< OPENSBI_NCPUS=2 clean_opensbi linux-2.riscv
	@+$(MAKE) -C $< OPENSBI_NCPUS=4 clean_opensbi linux-4.riscv
	@$(eval SUITE_DIR=$(subst .,,$(subst _build,,$(@F))))
	@$(eval PROG_DIR=$(BP_RISCV_DIR)/$(SUITE_DIR))
	@$(MKDIR) -p $(PROG_DIR)
	@$(FIND) $< -name "*.riscv" -exec $(MV) {} $(PROG_DIR) \;

$(eval $(call bsg_tgt_build_submodule,yocto,$(BP_YOCTO_DIR),$(BP_RISCV_TOUCH_DIR),$(BP_PATCH_DIR),$(BP_WORK_DIR)))
%/.yocto_build:
	@$(eval SUITE_DIR=$(subst .,,$(subst _build,,$(@F))))
	@$(eval PROG_DIR=$(BP_RISCV_DIR)/$(SUITE_DIR))
	@+$(MAKE) -C $< yocto.riscv
	@$(eval SUITE_DIR=$(subst .,,$(subst _build,,$(@F))))
	@$(eval PROG_DIR=$(BP_RISCV_DIR)/$(SUITE_DIR))
	@$(MKDIR) -p $(PROG_DIR)
	@$(FIND) $< -name "*.riscv" -exec $(CP) {} $(PROG_DIR) \;

$(eval $(call bsg_tgt_build_submodule,zephyr,$(BP_ZEPHYR_DIR),$(BP_RISCV_TOUCH_DIR),$(BP_PATCH_DIR),$(BP_WORK_DIR)))
%/.zephyr_build:
	@$(eval SUITE_DIR=$(subst .,,$(subst _build,,$(@F))))
	@$(eval PROG_DIR=$(BP_RISCV_DIR)/$(SUITE_DIR))
	@+$(MAKE) -C $< all
	@$(eval SUITE_DIR=$(subst .,,$(subst _build,,$(@F))))
	@$(eval PROG_DIR=$(BP_RISCV_DIR)/$(SUITE_DIR))
	@$(MKDIR) -p $(PROG_DIR)
	@$(FIND) $< -name "*.riscv" -exec $(CP) {} $(PROG_DIR) \;

$(eval $(call bsg_tgt_build_submodule,wolfssl,$(BP_WOLFSSL_DIR),$(BP_RISCV_TOUCH_DIR),$(BP_PATCH_DIR),$(BP_WORK_DIR)))
%/.wolfssl_build:
	@$(eval export CROSS_COMPILE=$(PLATFORM_TRIPLE)-)
	@+$(MAKE) BP_RISCV_DIR=$(BP_RISCV_DIR) -C $< -f bp_makefile all
	@+$(MAKE) BP_RISCV_DIR=$(BP_RISCV_DIR) -C $< -f bp_makefile build_wolfssl_test_benchmark
	@$(eval SUITE_DIR=$(subst .,,$(subst _build,,$(@F))))
	@$(eval PROG_DIR=$(BP_RISCV_DIR)/$(SUITE_DIR))
	@$(MKDIR) -p $(PROG_DIR)
	@$(FIND) $< -name "*.riscv" -exec $(CP) {} $(PROG_DIR) \;

