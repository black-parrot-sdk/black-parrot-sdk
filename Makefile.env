
##########################################################
## User configuration
##########################################################
# platforms: dromajo_cosim, zynqparrot
PLATFORM ?= dromajo_cosim

ifeq ($(PLATFORM),dromajo_cosim)
PLATFORM_DRAM_BASE ?= 0x80000000
PLATFORM_SP        ?= 0x8F000000
else ifeq ($(PLATFORM),zynqparrot)
PLATFORM_DRAM_BASE ?= 0x80000000
PLATFORM_SP        ?= 0x877FF000
else
$(error "PLATFORM not found")
endif

PLATFORM_MARCH ?= rv64gcb
PLATFORM_MABI ?= lp64d

##########################################################
## Cad environment
##########################################################
ifneq ($(MAKECMDGOALS),help)
include $(BSG_CADENV_DIR)/cadenv.mk
%/cadenv.mk:
	# BSG users leverage a machine-specific cadenv
	#   Here, we add sourcing to get these variables as well
	@$(eval CADENV_URL := git@github.com:bespoke-silicon-group/bsg_cadenv)
	@$(eval CADENV_EXISTS := $(shell git ls-remote --exit-code $(CADENV_URL) HEAD 2> /dev/null))
	# Recursive make to include the new fragment
	if [ -f "$(BSG_CADENV_DIR)/cadenv.mk" ]; then \
		echo "bsg_cadenv already exists"; \
	elif [[ ! -z "$(CADENV_EXISTS)" ]]; then \
		echo "Cloning bsg_cadenv from $(CADENV_URL)"; \
		git clone --recurse-submodules $(CADENV_URL) $(@D); \
	else \
		echo "bsg_cadenv not found"; \
		mkdir -p $(@D); \
		touch $@; \
	fi
	@echo "Successfully built $@!"
endif

#############################
# Cad settings
#############################
VCS ?= vcs
## Override needed for riscv-dv, else old is fine
SYNOPSYS ?=
override VCS_RELEASE := $(SYNOPSYS)/vcs/U-2023.03-SP1
## Specify license path if needed
LM_LICENSE_FILE ?=
VCS_HOME ?=

#############################
# Environment detection
#############################
CENTOS7 := $(if $(findstring CentOS Linux release 7,$(shell cat /etc/centos-release 2>/dev/null)),1,0)

##############################
# Executables
##############################
GCC         ?= gcc
CMAKE       ?= $(if $(shell which cmake3),cmake3,cmake)
PYTHON      ?= $(if $(shell which python3),python3,python)
PIP         ?= $(if $(shell which pip3),pip3,pip)
XXD         ?= xxd
CURL        ?= curl
GIT         ?= git
FIND        ?= find
CP          ?= cp
MKDIR       ?= mkdir
MV          ?= mv
TAR         ?= tar
WGET        ?= wget
CAT         ?= cat
CD          ?= cd
TOUCH       ?= touch
SYMLINK     ?= ln -nsf
ECHO        ?= echo

# Add SDK binaries to PATH 
export PATH := $(BP_SDK_BIN_DIR):$(PATH)

